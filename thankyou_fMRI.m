function thankyou_fMRI (money, duration)% 7/17/07: Modified for DotsX.%% function thankyou (money, opponent_money)%% Displays screen thanking the subject for participation in the experiment% Input:%  money - the amount of money the subject earned%  sig_det_score -- the points scored by subject in signal detection blocks[wn_, sr_, ppd_, fr_] = rGraphicsGetScreenAttributes;xres = sr_(3);yres = sr_(4);fontsize = 22;fontsize = 30;lnsp = -1;fontsize = 30;spacekey = 44; % Only accept a space as the command to quit:% obj_idx(1) = TextCenterCourier( 'This is the end of the experiment.', -3*lnsp, fontsize);% obj_idx(2) = TextCenterCourier( 'Thank you very much for ', -2*lnsp, fontsize);% obj_idx(3) = TextCenterCourier( 'your participation!', -lnsp, fontsize );% obj_idx(4) = TextCenterCourier( sprintf ('You have earned $%.2f.', money/100), lnsp, fontsize);% obj_idx(5) = TextCenterCourier( 'Congratulations!', 3*lnsp, fontsize);% str{1} = 'This is the end of the experiment.';str{2} = 'Thank you very much for ';str{3} = 'your participation!';str{4} = sprintf ('You have earned $%.2f.', money/100);str{5} = 'Congratulations!';for i = 1:5    textwidth = fontsize*length(str{i})/ppd_;    %         x_pos{i} = -textwidth/pi;    x_pos{i} = -0.3*textwidth;end% shoe a normal text, and%   try to make another that looks good on mono++indices = rAdd('dXtext', 5, 'visible', true, ...    'x', x_pos, 'y', { -3*lnsp -2*lnsp -1*lnsp 1*lnsp 3*lnsp }, ...    'size', fontsize, ...    'font', 'Courier',  ...    'bold', true, ...    'color', [1 1 1]*255, ...    'string', str );%     rGraphicsDraw(inf)% spacekey = 44; % Only accept a space as the command to quit:% [ keySecs, myKeyCode ] = rGraphicsDrawSelectiveBreak(inf,[],spacekey);% while KbCheck%     WaitSecs(0.002);% end% %     KbWait;% % rRemove('dXtext',indices);% %     rClear;rGraphicsDraw;WaitSecs(duration);% % % [y, freq, nbits] = wavread('TADA');% wavedata = y';% nrchannels = size(wavedata,1); % Number of rows == number of channels.% % % Open the default audio device [], with default mode [] (==Only playback),% % and a required latencyclass of zero 0 == no low-latency mode, as well as% % a frequency of freq and nrchannels sound channels.% % This returns a handle to the audio device:% pahandle = PsychPortAudio('Open', [], [], 0, freq, nrchannels);% % Fill the audio playback buffer with the audio data 'wavedata':% PsychPortAudio('FillBuffer', pahandle, wavedata);% % % dur = makesound2(freq, wavedata, nrchannels,pahandle);% % rGraphicsDraw;% % tstart = GetSecs;% % repetitions = 1; % Just play it once% % % % Start audio playback for 'repetitions' repetitions of the sound data,% % % start it immediately (0) and wait for the playback to start, return onset% % timestamp.% t1 = PsychPortAudio('Start', pahandle, repetitions, 0, 1);% % Stop playback (and wait for the end of playback before stopping):% t2 = PsychPortAudio('Stop', pahandle,1);% % % rGraphicsDraw(inf);% % % 8/11/2008: Enforce a 20 second wait period at the end.% % rGraphicsDrawNoInterrupt(20000);% % % PsychPortAudio('Close',pahandle);% % % % % % Wait for release of all keys on keyboard:% % while KbCheck; % %     WaitSecs(0.01); % % end;% % % % % dur = GetSecs - tstart;% % % % % % Don't allow continuous pressing of space to blast through the% % % instructions:% % while KbCheck% %     WaitSecs(0.002);% % end% % rRemove('dXtext', obj_idx); % % obj_idx = [];% 