function [RT, ER, RDir, score, premie_t,premie_d,timeS] = ...    trial (dotsIdx, targetIdx, blackTargetIdx, textIdx, ppd_, direc, corkey, D, shape, scorein, ...	money, salary, ntrial, pahandle_correct, pahandle_antic, respdir, daq, contrast_factor )% function [RT, ER, score] = trial (windowptr, direc, corkey, D ,Dpen, scorein)% % One experimental trial% Inputs:%  windowptr - pointer to the screen window%  direc - direction of dots%  corkey - correct key for this trial as number by crazy Mac%  D - Response-Stimulus Interval%  Dpen - Additional Delay after making an error%  scorein - starting score of the subject% Outputs:%  RT - reaction time [in seconds]%  ER - error = 1, correct = 0%  score - score after the trial% % Change to accepting only responses in respdir direction:if strcmp( 'Left', respdir) == 1% 	corcode = 7;	    corcode = 29;else% 	corcode = 47;    corcode = 16;endrSet('dXdots',dotsIdx,'direction',direc,'visible',true);rSet('dXtarget',blackTargetIdx,'visible',true);rSet('dXtarget',targetIdx,'visible',true);if daq ~= -1    if direc == 0        DaqDOut(daq, 0, 30);   % 30 volts is for Rightward motion    else        DaqDOut(daq, 0, 25);   % 25 volts is for Leftward motion    end    DaqDOut(daq, 0, 0);endtimeS = GetSecs;[ mySecs, myKeyCode ] = rGraphicsDrawSelectiveBreakMulti(inf,[],[29 16]);% timeR = GetSecs;timeR = mySecs;% rGraphicsBlank;rSet('dXdots',dotsIdx,'visible',false);rGraphicsDraw;% Throwing in a check here to make sure that timeR is not less than % 100 msec. If so, incur a penalty and move to penalizing delay period, % returning the normal statistics that would've been returned (thus % the code that analyzes statistics should take care of RTs of < 100 % msec, by throwing those trials out). Currently this version of the % code does not return the number of premature presses.RT = timeR - timeS;% [keydown, secs, keycode] = KbCheck;% keynum = find(keycode);keynum = find(myKeyCode);if isempty (keynum)	keynum = 0;endER = (keynum(1) ~= corcode);% EK - record outcome to MEG traceif daq ~= -1    if ER        DaqDOut(daq, 0, 35);  % 35 = error    else        DaqDOut(daq, 0, 40);  % 40 = correct    end    DaqDOut(daq, 0, 0);end% Here's the 100 msec check:if RT > 0.1	score = scorein + ~ER;else	score = scorein;endopponent_score = 0;% Get the particular direction of this trial:% if keynum == 7if keynum == 29	RDir = 'L';% elseif keynum == 47elseif keynum == 16	RDir = 'R';else	RDir = '-';endfeedback = 1;   % Legacy variable from when I turned off feedback; now it's always given% 10/27/08: Now making a gamma-distributed RSI, with shape and mean% parameters sent by the calling function: scale = D/shape;RSI = gamrnd(shape,scale);if RT > 0.1    	if ER		delay = RSI;        rSet('dXtarget',targetIdx,'color',contrast_factor*[255 0 0]);        rGraphicsDraw;	elseif feedback        rSet('dXtarget',targetIdx,'color',contrast_factor*[0 255 0]);        rGraphicsDraw;		dur = makesound2(pahandle_correct);		delay = RSI - dur;	else		delay = RSI;	end	% Every 10 trials, display feedback for 0.5 seconds:    if (mod( ntrial, 5 ) == 1) & feedback        % 		TextCenter (windowptr, sprintf ('Score: %d', score), 0, 12);%         rGraphicsBlank;        rSet('dXdots',dotsIdx,'visible',false);        fontsize = 20;        font_degrees = 0.7;        str = sprintf ('Score: %d', score);        textwidth = fontsize*length(str)/ppd_;%         textwidth = font_degrees*length(str);        x_pos = -0.3*textwidth;        rSet('dXtext',textIdx,'x',x_pos,'y', -1,...            'string',str,'size',fontsize,'visible',true);%         rGraphicsDraw(500);        rGraphicsDraw(delay);	endelse	% This is a penalty delay, so might as well make it big:% 	dur = makesound('errorsound');	dur = makesound2(pahandle_antic);	delay = 4 - dur;endrSet('dXtarget',targetIdx,'color',contrast_factor*[255 255 255]);premie_t = []; premie_d = [];% 5/3/06: Soak up any continuous button pressing and don't do anything during such a time:while KbCheckMulti    WaitSecs(0.001);end% Get a current time for the offset of the subject's keypress:start = GetSecs;% Wait for the RSI to expire. If it does, return. If it doesn't, go to the premie keypress % code below:while ~KbCheckMulti    s = GetSecs - start;    WaitSecs(0.001);    if s >= delay        %         rDone;%         rGraphicsBlank;        rSet('dXtext',textIdx,'visible',false);        rGraphicsDraw;        return    endend% If the function gets to here, then they made a premature keypress, % so penalize them:% dur = makesound;% 	start = GetSecs;% 9/14/05: Could determine inter-premature-press interval here:% premie_t = []; premie_d = [];% 5/3/06: make delay 4 seconds:s = GetSecs;% This is a penalty delay, so might as well make it big:% dur = makesound('errorsound');dur = makesound2(pahandle_antic);delay = 4 - dur;premie_t = [premie_t, s - start];start = s;keynum = find(myKeyCode);if isempty (keynum)	keynum = 0;end% if keynum == 7if keynum == 29	premie_d = [premie_d,'L'];% elseif keynum == 47elseif keynum == 16	premie_d = [premie_d,'R'];else	premie_d = [premie_d,'-'];endwhile 1% 	n = 0.1 * randn( 1 );% 	if n < -D% 		n = -D + 0.01;% 	end	% Empty loop to absorb continuous pressing:	while KbCheckMulti		WaitSecs(0.001);	end	while ~KbCheckMulti		s = GetSecs - start;        WaitSecs(0.001);		if s >= delay            %             rDone;%             rGraphicsBlank;            rSet('dXtext',textIdx,'visible',false);            rGraphicsDraw;            			return		end	end	% 	dur = makesound;		% 	start = GetSecs;	% 9/14/05: Could determine inter-premature-press interval here:	s = GetSecs;	% This is a penalty delay, so might as well make it big:% 	dur = makesound('errorsound');	dur = makesound2(pahandle_antic);	delay = 4 - dur;% 	premie = s - start;	premie_t = [premie_t, s - start];	start = s;	keynum = find(myKeyCode);	if isempty (keynum)		keynum = 0;	end% 	if keynum == 7	if keynum == 29		premie_d = [premie_d,'L'];% 	elseif keynum == 47	    elseif keynum == 16		premie_d = [premie_d,'R'];	else		premie_d = [premie_d,'-'];	endend