% function sig_det_instruction (salary,windowptr)function sig_det_instruction (salary)% 7/18/07: Modified to work with DotsX.%% function instruction (salary, numblocks, blockdur)% Displays instructions for the experiment% Inputs:%  salary - money received by subjects after each correct decision [in cents]%  numblocks - number of experimental blocks%  blockdur - duration of the block in seconds[wn_, sr_, ppd_, fr_] = rGraphicsGetScreenAttributes;xres = sr_(3);yres = sr_(4);lnsp = -1;fontsize = 30;spacekey = 44; % Only accept a space as the command to quit:% obj_idx(1) = TextCenterCourier( 'SIG_DET_INSTRUCTION.M: OK, just two shorter blocks left.', -2*lnsp, fontsize);% % 9/15/05:% % TextCenterCourier( 'Your opponent''s score will not', -lnsp );% % TextCenterCourier( 'appear during these blocks.', 0 );% obj_idx(2) = TextCenterCourier( '(Press the ''Space'' key to continue.)', 4*lnsp, fontsize);% % rGraphicsDrawSelectiveBreak(inf, [], spacekey);% % Don't allow continuous pressing of space to blast through the% % instructions:% while KbCheck% %     WaitSecs(0.001);% end% % rRemove('dXtext', obj_idx); % % obj_idx = [];% rGraphicsBlank;str = {};x_pos = {};str{1} = 'OK, just two shorter blocks left.';str{2} = '(Press the ''Space'' key to continue.)';for i = 1:2    textwidth = fontsize*length(str{i})/ppd_;    %         x_pos{i} = -textwidth/pi;    x_pos{i} = -0.3*textwidth;end% shoe a normal text, and%   try to make another that looks good on mono++indices = rAdd('dXtext', 2, 'visible', true, ...    'x', x_pos, 'y', { -2*lnsp 4*lnsp }, ...    'size', fontsize, ...    'font', 'Courier',  ...    'bold', true, ...    'color', [1 1 1]*255, ...    'string', str );%     rGraphicsDraw(inf)spacekey = 44; % Only accept a space as the command to quit:[ keySecs, myKeyCode ] = rGraphicsDrawSelectiveBreakMulti(inf,[],spacekey);while KbCheckMulti    WaitSecs(0.002);end%     KbWait;rRemove('dXtext',indices);% rSet('dXtext',indices,'visible',false); rGraphicsDraw;% % obj_idx(3) = TextCenterCourier( 'These two blocks will each last 2 minutes.', -3*lnsp, fontsize);% obj_idx(4) = TextCenterCourier( 'In these blocks, simply press the specified key as soon', -2*lnsp, fontsize );% obj_idx(5) = TextCenterCourier( 'as you see any dots at all. In the first block,', -lnsp, fontsize );% obj_idx(6) = TextCenterCourier( 'always press the Z key with your left index finger.', 0, fontsize );% obj_idx(7) = TextCenterCourier( 'In the second, always press the M key', lnsp, fontsize );% obj_idx(8) = TextCenterCourier(  'with your right index finger.', 2*lnsp, fontsize );% obj_idx(9) = TextCenterCourier( sprintf ('You will be paid %d cent for each point you gain.', salary),3*lnsp, fontsize);% obj_idx(10) = TextCenterCourier( 'Try to earn as much as you can.', 4*lnsp, fontsize );% obj_idx(11) = TextCenterCourier( 'Press the "Space" key to continue', 5*lnsp, fontsize);% % % c = GetChar;% % while strcmp( c, ' ' ) ~= 1% % 	c = GetChar;% % end% % % % % screen ('CloseAll');% % screen('FillRect',255);% rGraphicsDrawSelectiveBreak(inf, [], spacekey);% % Don't allow continuous pressing of space to blast through the% % instructions:% while KbCheck% %     WaitSecs(0.001);% end% rRemove('dXtext', obj_idx); % obj_idx = [];str = {};x_pos = {};str{1} = 'These two blocks will each last 2 minutes.';str{2} = 'In these blocks, simply press the specified key as soon';str{3} = 'as you see any dots at all. In the first block,';str{4} = 'always press the Z key with your left index finger.';str{5} = 'In the second, always press the M key';str{6} = 'with your right index finger.';str{7} = sprintf ('You will be paid %d cent for each point you gain.', salary);str{8} = 'Try to earn as much as you can.';str{9} = 'Press the "Space" key to continue';for i = 1:9    textwidth = fontsize*length(str{i})/ppd_;    %         x_pos{i} = -textwidth/pi;    x_pos{i} = -0.3*textwidth;end% shoe a normal text, and%   try to make another that looks good on mono++indices = rAdd('dXtext', 9, 'visible', true, ...    'x', x_pos, 'y', { -3*lnsp -2*lnsp -1*lnsp 0 1*lnsp 2*lnsp 3*lnsp 4*lnsp 5*lnsp }, ...    'size', fontsize, ...    'font', 'Courier',  ...    'bold', true, ...    'color', [1 1 1]*255, ...    'string', str );%     rGraphicsDraw(inf)spacekey = 44; % Only accept a space as the command to quit:[ keySecs, myKeyCode ] = rGraphicsDrawSelectiveBreakMulti(inf,[],spacekey);while KbCheckMulti    WaitSecs(0.002);end%     KbWait;rRemove('dXtext',indices);% rSet('dXtext',indices,'visible',false);rGraphicsDraw;